# Compose file for the *arr stack. Configuration files are stored 
# in a docker folder mounted in root. Change to bind mounts if needed.
# All containers are ran with user and group ids of the main user and 
# share to aviod permissions issues of downloaded files, please refer
# the read me file for more information.
# Torrent/download apps are proxied through Gluetun
# Containers can communicate with each other by using the IP of the docker network default gateway(ex. 172.20.0.1)
version: "3.9"
services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8080:8080 # qbittorrent web interface
      - 9904:9904 # qbittorrent torrent port
      - 6789:6789 # nzbget
      - 9696:9696 # prowlarr
    volumes:
      - /docker/gluetun:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=airvpn
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=KEaVVHd23EYhyrtPJfTHCJY29B86bIZDpQpvuO1y4k4=
      - WIREGUARD_PRESHARED_KEY=KNl3ZyyVm7TXap2U1DXixTLtSSdAhJBAHSIyrdW6KmM=
      - WIREGUARD_ADDRESSES=10.177.4.25
      - SERVER_COUNTRIES=CANADA
      - HEALTH_VPN_DURATION_INITIAL=120s
      - BLOCK_MALICIOUS=off
      - BLOCK_SURVEILLANCE=off
      - BLOCK_ADS=off
      - DOT=off
    healthcheck:
      test: ping -c 1 9.9.9.9 || exit 1
      interval: 60s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  # This is a new addition since creating the tutorial video on this stack. 
  # See the 'qBittorrent Stalls with VPN Timeout' section for more information.
  deunhealth:
    image: qmcgaw/deunhealth
    container_name: deunhealth
    network_mode: none
    environment:
      - LOG_LEVEL=info
      - HEALTH_SERVER_ADDRESS=127.0.0.1:9999
      - TZ=America/Moncton
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  # Healthcheck was added to work with deunhealth to restart container
  # on unhealthy status. labels allows deunhealth to monitor.
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    labels:
      - deunhealth.restart.on.unhealthy="true"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Moncton
      - WEBUI_PORT=8080
      - TORRENTING_PORT=9904
    volumes:
      - /docker/qbittorrent:/config
      - /media_root:/media_root
    network_mode: service:gluetun
    healthcheck:
      test: ping -c 1 9.9.9.9 || exit 1
      interval: 60s
      timeout: 5s
      retries: 5
  nzbget:
    image: lscr.io/linuxserver/nzbget:latest
    container_name: nzbget
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Moncton
      - NZBGET_USER=user
      - NZBGET_PASS=password
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/nzbget:/config
      - /media_root:/media_root
    restart: unless-stopped
    network_mode: service:gluetun
    healthcheck:
      test: ping -c 1 9.9.9.9 || exit 1
      interval: 60s
      timeout: 5s
      retries: 5
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Moncton
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/prowlarr:/config
    restart: unless-stopped
    network_mode: service:gluetun
    networks: []
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Moncton
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/sonarr:/config
      - /media_root:/media_root
    ports:
      - 8989:8989
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Moncton
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/radarr:/config
      - /media_root:/media_root
    ports:
      - 7878:7878
  lidarr:
    container_name: lidarr
    image: lscr.io/linuxserver/lidarr:latest
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/lidarr:/config
      - /media_root:/media_root
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Moncton
    ports:
      - 8686:8686
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Moncton
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/bazarr:/config
      - /media_root:/media_root
    ports:
      - 6767:6767
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Moncton
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/readarr:/config
      - /media_root:/media_root
    ports:
      - 8787:8787
    restart: unless-stopped
  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=America/Moncton
    ports:
      - ${PORT:-8191}:8191
    restart: unless-stopped
networks:
  default: null
